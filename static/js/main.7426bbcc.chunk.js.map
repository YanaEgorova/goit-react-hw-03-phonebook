{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","className","onSubmit","type","onChange","Component","Filter","ContactList","onDeleteContact","contacts","map","contact","key","id","onClick","App","filter","changeFilter","deleteContact","prevState","addContact","uuidv4","isName","some","toLowerCase","includes","console","log","alert","getVisibleContacts","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7426bbcc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './ContactForm.css';\n\nexport default class ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleChange = e => {\n        // console.log(e.target.name);\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.onAddContact(this.state.name, this.state.number);\n        // this.props.onAddContact(this.state.number);\n        this.setState({\n            name: '',\n            number: '',\n        });\n    };\n\n    render() {\n        const { name, number } = this.state;\n        return (\n            <form className=\"ContactForm-form\" onSubmit={this.handleSubmit}>\n                <label>\n                    <span> Name </span>{' '}\n                    <input\n                        type=\"text\"\n                        value={name}\n                        onChange={this.handleChange}\n                        name=\"name\"\n                    ></input>{' '}\n                </label>{' '}\n                <label>\n                    <span> Number </span>{' '}\n                    <input\n                        type=\"text\"\n                        value={number}\n                        name=\"number\"\n                        onChange={this.handleChange}\n                    ></input>{' '}\n                </label>{' '}\n                <button type=\"submit\"> Add contact </button>{' '}\n            </form>\n        );\n    }\n}\n","import React from 'react';\n\nexport default function Filter({ value, onChange }) {\n    return (\n        <>\n            <h3> Find contacts by me </h3>{' '}\n            <input\n                type=\"text\"\n                value={value}\n                onChange={e => onChange(e.target.value)}\n            ></input>{' '}\n        </>\n    );\n}\n","import React from 'react';\n\nexport default function ContactList({ onDeleteContact, contacts }) {\n  return (\n    <ul>\n      {' '}\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          {' '}\n          {contact.name}: {contact.number}{' '}\n          <button onClick={() => onDeleteContact(contact.id)}> Delete </button>{' '}\n        </li>\n      ))}{' '}\n    </ul>\n  );\n}\n","import React, {\n  Component\n} from 'react';\nimport {\n  v4 as uuidv4\n} from 'uuid';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem('contacts');\n\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts)\n      })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n\n    }\n  }\n\n  changeFilter = filter => {\n    this.setState({\n      filter,\n    });\n  };\n\n  deleteContact = id => {\n    return this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(\n          contact => contact.id !== id,\n        ),\n      };\n    });\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const isName = this.state.contacts.some(contact =>\n      contact.name.toLowerCase().includes(name.toLowerCase()),\n    );\n\n    console.log(isName);\n\n    if (isName) {\n      alert(`${name} is already in contacts`);\n    } else {\n      this.setState(prevState => {\n        return {\n          contacts: [...prevState.contacts, contact],\n        };\n      });\n    }\n  };\n\n  getVisibleContacts = () => {\n    const {\n      contacts,\n      filter\n    } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const {\n      contacts,\n      filter\n    } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return ( <\n        div >\n        <\n        h1 > Phonebook < /h1>{' '} <\n        ContactForm onAddContact = {\n          this.addContact\n        }\n        />{' '} <\n        h2 > Contacts < /h2>{' '} {\n        contacts.length > 1 && ( <\n          Filter value = {\n            filter\n          }\n          onChange = {\n            this.changeFilter\n          }\n          />\n        )\n      } {\n        contacts.length > 0 && ( <\n          ContactList onDeleteContact = {\n            this.deleteContact\n          }\n          contacts = {\n            visibleContacts\n          }\n          />\n        )\n      } {\n        ' '\n      } <\n      /div>\n  );\n}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}